// <auto-generated />
using System;
using HashWorkerBlazor.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HashWorkerBlazor.Migrations
{
    [DbContext(typeof(HashWorkerDbContext))]
    [Migration("20221116011223_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("HashWorkerBlazor.Models.ListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CheckHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FolderPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HashListJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSendTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ListItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "Test",
                            CheckHash = "Test",
                            CreateTime = new DateTime(2022, 11, 16, 9, 12, 22, 926, DateTimeKind.Local).AddTicks(5019),
                            FolderPath = "Test",
                            HashListJson = "Test"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
